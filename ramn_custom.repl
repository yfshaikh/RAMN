// RAMN Custom Platform Description for Renode
// Describes the STM32L552 memory layout and peripherals

cpu: CPU.CortexM @ sysbus
    cpuType: "cortex-m33"
    nvic: nvic

nvic: IRQControllers.NVIC @ sysbus 0xE000E000
    -> cpu@0

flash: Memory.MappedMemory @ sysbus 0x08000000
    size: 0x80000  // 512KB

sram1: Memory.MappedMemory @ sysbus 0x20000000
    size: 0x30000  // 192KB

sram2: Memory.MappedMemory @ sysbus 0x20030000
    size: 0x10000  // 64KB

// System Memory (bootloader)
systemMemory: Memory.MappedMemory @ sysbus 0x0BF90000
    size: 0x8000

// OTP (One Time Programmable)
otp: Memory.MappedMemory @ sysbus 0x0BFA0000
    size: 0x200

// Option Bytes
optionBytes: Memory.MappedMemory @ sysbus 0x40022040
    size: 0x100

// Peripheral simulation (basic)
// Note: Full peripheral emulation would require extensive implementation

// GPIO (simplified)
gpioA: GPIOPort.STM32_GPIOPort @ sysbus <0x42020000, +0x400>

gpioB: GPIOPort.STM32_GPIOPort @ sysbus <0x42020400, +0x400>

gpioC: GPIOPort.STM32_GPIOPort @ sysbus <0x42020800, +0x400>

// USART (simplified)
usart1: UART.STM32F7_USART @ sysbus 0x40013800
    -> nvic@37

// LPUART1 for RAMN debugging
lpuart1: UART.STM32F7_USART @ sysbus <0x40008000, +0x400> { frequency: 16000000; IRQ -> nvic@70 }

// FDCAN1 for CAN bus functionality
fdcan1: CAN.MCAN @ sysbus 0x4000A400
    -> nvic@19

// Note: USB and other complex peripherals are not included
// as they require custom implementation

